wd zu
echo $ZINIT_PLUGINS/mfaerevaag---wd
zi add-fpath mfaerevaag/wd
wd list
wd add zunder-zsh
wd add nvim-config
setopt AUTO_PUSHD
wd zunder-zsh
wd nvim-config
wd ..
pushd
pushd descargas
pushd Descargas
popd Descargas
popd documentos
popd Documentos
dirs
cd ar
fd -H _fnm
fd -H "_fnm"
echo ZINIT[COMPLETIONS_DIR]
test -f $ZINIT[COMPLETIONS_DIR]/_fnm
! test -f $ZINIT[COMPLETIONS_DIR]/_fnm
! q
echo $ZINIT
fnm completions
rm /home/warbacon/.local/share/zinit/completions/_fnm
cd .zsh-evalcache
cd fnm
echo $ZINIT_HOME
.
cd zinit/zinit.git
echo $ZINIT[HOME]
echo $ZINIT[PLUGINS_DIR]
echo $ZINIT_PLUGINS
cd zinit
echo $ZINIT[HOME_DIR]
which dnm
rm -rf fnm
echo $PATH
cd $ZINIT [PLUGINS_DIR]
cd $ZINIT[PLUGINS_DIR]
cd Descargas/Cuaderno\ del\ profesor
asdasd
zi creinstall zsh-users/zsh-completions
zi creinstall _fnm
cd .local/share/zinit/completions/
rm _fnm
zinit compinit
zi cenable fnm
cd $ZINIT[COMPLETIONS_DIR]
nvim _fnm
which wd
cd /home/warbacon/.local/share/zinit/plugins/mfaerevaag---wd/
nvim wd.1
nvim wd.sh
nvim _wd.sh
rm -rf NerdFonts examenesBBDD.zip
rm -rf Cuaderno\ del\ profesor 
FZF_ALT_C_OPTS="-hidden"
FZF_ALT_C_OPTS="-Hidden"
FZF_ALT_C_OPTS="-"
FZF_ALT_C_OPTS="-H"
find . -type f
which fs
cd conf.d
nvim fzf_options.fish
Descargas/ ls
Descargas/ 
builtin cd -- .config/zsh/plugins.zsh
fzf
builtin cd -- Descargas/examenesBBDD/
nvim .config/nvim/lua/config/lazy.lua 
fish 
rm -rf .local/share/zinit .local/share/fnm
nvim fzf-theme.zsh
builtin cd -- .config/nvim/lua/config/
vivid --version
builtin cd -- .config/fish/
nvim config.fish
vivid generate catppuccin-mocha
cd Baconclock
fd --
fd --type=directory
touch user-config.zsh
cat fzf-theme.zsh > user-config.zsh
rm fzf-theme.zsh
builtin cd -- Git/zunder-zsh/config
cd extensions
rm .inputrc
nvim .profile
adasd
d√±
abbr hola=ls
abbr hola="echo \"hola\""
ks
fd abbreviations
fd -H abbreviations
abbr hola="echo hola"
hola
nvim .config/zsh-abbr/user-abbreviations
builtin cd -- Git/dotfiles/config
cp .config/zsh/.zshrc Git/zunder-zsh/config 
nvim config/plugins.zsh
mv .local/bin/vivid .
which vivid
vivid
cd vivid-v0.8.0-x86_64-unknown-linux-gnu
cd sharkdp---fd
cd ogham---exa
cd junegunn---fzf
rm .local/bin/fd
rm vivid
builtin cd -- .config/zsh
cd plugins
cd sharkdp---vivid
which fd
vivid help
vivid themes
sudo dnf remove fdfind
sudo dnf remove fd-find
le
cd .local/share/zinit/
rm getnf
fd --version
fd -H --exclude=.git --type=directory
sudo dnf remove sqlite-3.40.0-1.fc37.x86_64
sqlite
nvi install.sh
uname -r
[ $(uname -m) = "x86_64" ]
[ $(uname -m) = "arm" ]
cd as
ppm list
cd .local/share/fnm
cd node-versions
cd v18.14.2
cd installation
rm -r Git/dotfiles/config/nvim
which c
which cd
builtin ls
builtin c
builtin cd
builtin cd de
/bin/ls
/bin/ls --color
/bin/ls --color -l
/bin/ls --color -l -h
cd Juegos/WartribeAcademy-1.7.2-pc
builtin cd -- .config/nvim/lua/
nvm
nvim options.lua
rm .warprc
rm .zcompdump
zi compinit
sls
sudo dnf install 0ad-0.0.26-3.fc37.x86_64
cd dotfiles
cp -r config/mpv ~/.config
celluloid
celluloid https://www.youtube.com/watch?v=OH5-Y37s88o&t=938s
builtin cd -- .config/mpv/
nvim mpv.conf
celluloid "https://www.youtube.com/watch?v=OH5-Y37s88o&t=938s"
yt-dlp "https://www.youtube.com/watch?v=OH5-Y37s88o&t=938s"
flatpak uninstall com.microsoft.Edge
flatpak uninstall org.gtk.Gtk3theme.adw-gtk3
flatpak uninstall org.gtk.Gtk3theme.adw-gtk3 org.gtk.Gtk3theme.adw-gtk3-dark
flatpak uninstall --unused
flatpak uninstall --delete-data
flatpak list
flatpak updae
builtin cd -- .config/bat/themes/
cd .local/share
builtin cd -- themes/
rm -rf .local/share/themes/ 
ll -A
ls --sort extension
ll --sort extension
ll -A --sort extension
ll --group-directories-first
ll --group-directories-first -A
exa
sudo dnf remvove exa
sudo dnf remove exa
sudo dnf remove fd
zi comp
zi list
builtin cd -- Git/zunder-zsh
builtin cd -- .local/share/zinit/plugins/junegunn---fzf/
time command zsh
command -v zsh
gl
cp .config/zsh/aliases.zsh Git/zunder-zsh/config
git
cd M
nvim structs.h
builtin cd -- zunder-zsh/
fnm install
nvim .config/zsh/plugins.zsh
g++ hola.cpp -o hola.o && ./hola.o
rm hola.
rm hola.cpp
rm hola.o
cd Im√ÉÅgenes
builtin cd -- Git/zunder-zsh/config/
hyperfine "command -v zsh"
cd /
nano etc/dnsmasq.d/ 
sudo dnf remove curl
nvim .gitignore
cd Git/MP
rm -rf MP
git clone https://github.com/jggomeztocinouca/MP.git
cd MP
clion .
cd Enunciado
cd ficheros
builtin cd -- Git/MP/ficheros/
sudo dnf search tux
sudo dnf install supertuxkart
cd V√≠deos
tldr ffmpeg
ffmpeg -i Grabaci√≥n\ de\ pantalla\ desde\ 2023-03-06\ 13-36-56.webm preview.gif
eog preview.gif
builtin cd -- V√≠deos/
cd Grabaciones\ de\ la\ pantalla
mv Grabaci√≥n\ de\ pantalla\ desde\ 2023-03-06\ 13-36-56.webm preview.webm
cp preview.webm ~/Git/zunder-zsh/assets
convert preview.webm preview.gif
ffmpeg -i preview.webm -pix_fmt rgb24 preview.gif
cd plugins/hlissner---zsh-autopair
cp config/plugins.zsh ~/.config/zsh
sudo dnf install kitt
sudo dnf install kitty-
sudo dnf install kitty
tldr tar
tar cf gola.tar Descargas 
rm gola.tar
cd Archivo
kitty +kitten themes
builtin cd -- Descargas/
cd Descargas/P0-ejs-Make
bat bienvenida.
bat cache --build
bat bienvenida.cpp
rm preview.webm
rm preview.webp
sudo dnf install asciinema
asciinema play /tmp/tmp5tt1w_xa-ascii.cast
chmod +x agg-x86_64-unknown-linux-gnu
./agg-x86_64-unknown-linux-gnu /tmp/tmp5tt1w_xa-ascii.cast
./agg-x86_64-unknown-linux-gnu /tmp/tmp5tt1w_xa-ascii.cast ola.gif
./agg-x86_64-unknown-linux-gnu /tmp/tmp5tt1w_xa-ascii.cast ola.gif --font-family "JetBrains Mono, Symbols Nerd Font"
./agg-x86_64-unknown-linux-gnu /tmp/tmp5tt1w_xa-ascii.cast ola.gif --font-family "JetBrains Mono,Symbols Nerd Font"
./agg-x86_64-unknown-linux-gnu /tmp/tmp5tt1w_xa-ascii.cast ola.gif --font-family "JetBrains Mono"
./agg-x86_64-unknown-linux-gnu /tmp/tmp5tt1w_xa-ascii.cast ola.gif --font-family "Pier Sans"
./agg-x86_64-unknown-linux-gnu
./agg-x86_64-unknown-linux-gnu --help
./agg-x86_64-unknown-linux-gnu --help --font-family
./agg-x86_64-unknown-linux-gnu --font-family
./agg-x86_64-unknown-linux-gnu --font-family --help
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "Symbols Nerd Font"
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "Symbols Nerd Font" ola.gif
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "Symbols Nerd Font" /tmp/tmp5tt1w_xa-ascii.cast ola.gif
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmp5tt1w_xa-ascii.cast ola.gif
eog ola.gif
lg+
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpd92e_x2r-ascii.cast  preview.gif
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpa0cn8_ri-ascii.cast   preview.gif --theme molokai
mkdir lazygit
cd lazygit
nvim config.yml
cp preview.gif ~/Git/zunder-zsh/assets
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpa0cn8_ri-ascii.cast   preview.gif --theme monokai -col 40
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpa0cn8_ri-ascii.cast   preview.gif --theme monokai --col 40
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpa0cn8_ri-ascii.cast   preview.gif --theme monokai --cols 40
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpa0cn8_ri-ascii.cast   preview.gif --theme monokai --cols 80
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpa0cn8_ri-ascii.cast   preview.gif --theme monokai --cols 120
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpa0cn8_ri-ascii.cast   preview.gif --theme monokai
cp Descargas/ezgif.com-crop.gif Git/zunder-zsh/assets/preview.gif 
builtin cd -- Git/zunder-zsh/assets/
√±g
builtin cd -- .local/share/nvim/lazy/mason.nvim/lua/mason-registry/index/erg/
cd .cache
cd lib
builtin cd -- .config/discord/0.0.24/modules/discord_spellcheck/node_modules/underscore/
nvim functions.sh
./uninstall.sh
builtin cd -- .local/share/nvim/mason/packages/bash-language-server/
cd node_modules
cd bash-language-server
./tree-sitter-bash.wasm
fnm --install
rm -rf .local/share/nvim
eval $(fnm init)
eval $(fnm init zsh)
echo $ZSH_EVALCACHE_DIR
which npm
rm -rf \" .zsh-evalcache 
cd zsh-evalcache
echo $ZINIT[HOME_DIR]/fnm
cd Pr√ÉÅcticas/Pr√ÉÅctica\ 0
builtin cd -- Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/Pr√ÉÅctica\ 0/
touch main.cpp
g++ -o fecha.o main.o
g++ -c fecha.cpp main.cpp
g++ -o main.o fecha.o
nvim makefile
mv makefile Makefile
make programa
nvim main.
make correProgramita
mae
nvim clean
evince Enunciado-P0.pdf
./programita
i
make; ./programita
zi creinstall ~/.local/share/fnm/_fnm
cd .config/zsh 
cp .config/zsh/.p10k.zsh p10
nvim p10
zi update -a
cd do
cd .renpy
p10k configure
cd .mozilla
cd /bin
nvim Git/zunder-zsh/install.sh
sudo dnf remove sqlite3
sudo dnf remove git
sudo dnf remove unzip
sudo dnf install sqlite
sudo dnf install sqlite zip
sudo dnf remove unzip sqlite
sudo dnf install zip
sudo dnf remove sqlite
nvim .config/zsh/.p10k.zsh 
cp .config/zsh/.p10k.zsh Git/zunder-zsh/config
man compinit
compinit --help
compinit help
mkdir doc
rm -rf doc
cp .config/zsh/options.zsh Git/zunder-zsh/config
touch newfile
asciinema rec
echo "zsh is awesome"
./agg-x86_64-unknown-linux-gnu --font-dir ~/.local/share/fonts --font-family "JetBrainsMono Nerd Font" /tmp/tmpgvfrz_3s-ascii.cast   preview.gif --theme monokai
eog preview.gif 
rm newfile
sudo dnf remove fzf
sudo dnf install gtk3
sudo dnf info gtk3
sudo dnf upgrade gtk3
rm p10
cd Sistemas\ distribuidos
rm -rf Cuaderno\ del\ profesor
unzip Cuaderno\ del\ profesor.zip -d Cuaderno\ del\ profesor
cd Cuaderno\ del\ profesor
nvim cuaderno
nvim Cuaderno_del_profesor.md
nvim Documentos/Cuaderno\ del\ profesor/C√≥digo/main.c 
sudo dnf remove kitty-
sudo dnf remove kitty-0.26.5-3.fc37.x86_64
rm -rf .config/zsh-abbr 
rm -rf .config/kitty
ls .config
builtin cd -- .config/jgit/
nvim config
rm -rf godot
fd -H godot
rm -rf .local/share/godot/
fast
fastfetch
cp ~/Git/zunder-zsh/config/plugins.zsh .
zi creinstall ~/.local/share/fnm/
zi clist
bat .local/share/zinit/snippets/https--raw.githubusercontent.com--junegunn--fzf--master--shell/key-bindings.zsh/key-bindings.zsh 
killall nvim
rm -rf .local/share/zinit/zsh-evalcache
builtin cd -- .local/share/nvim/lazy/mason.nvim/lua/mason-registry/index/unocss-language-server/
builtin cd -- Documentos/Archivo/An√ÉÅlisis\ de\ Algoritmos\ y\ Estructuras\ de\ Datos/Pr√ÉÅcticas/pr√ÉÅctica\ 2/
mkdir "Ejercicio extra 1"
cp ejercicio1.cpp ejercicio_extra.cpp
nvim ejercicio
g++ -o ejercicio_extra.o
nvim ejercicio_extra.o
make ejercicio_extra
./ejercicio_extra
lw
nvim ejercicio_extra.cpp
nvim ejercicio1.cpp
nvim abin.dat
make ejercicio_extra && ./ejercicio_extra
mv ejercicio_extra2.cpp
mv ejercicio_extra.cpp ejercicio_extra2.cpp
make ejercicio_extra2
cp ejercicio_extra2.cpp ejercicio_extra3.cpp
make ejercicio_extra3
nvim ejercicio_extra3.cpp
√±s
cd CLionProjects
rm -rf CLionProjects
builtin cd -- Documentos/Estructuras\ de\ datos\ no\ lineales/Pr√ÉÅcticas/Pr√ÉÅctica\ 2/
cp ejercicio_extra2.cpp ejercicio_extra4.cpp
nvim ejercicio_extra4.cpp
make ejercicio_extra4 && ./ejercicio_extra4
sads
bat "https://raw.githubusercontent.com/Warbacon/zunder-zsh/main/README.md"
curl "https://raw.githubusercontent.com/Warbacon/zunder-zsh/main/README.md"
curl "https://raw.githubusercontent.com/Warbacon/zunder-zsh/main/README.md" | bat
curl "https://raw.githubusercontent.com/Warbacon/zunder-zsh/main/README.md" | bat --language=markdown
mkdir Pr√ÉÅctica2
cd Pr√ÉÅctica
cd Pr√ÉÅctica1
mkdir ejercicio1
nvim ejercicio1.py
python ejercicio1.py
mv ejercicio1.py cliente.py
mv ejercicio1 ejercicio2/
sudo dnf install jetbrains-mono-fonts-2.242-2.fc37.noarch
netstat -a
sudo dnf install mysql
sudo dnf install mysql++-3.3.0-3.fc37.i686
sudo dnf install mysql++
sudo dnf install mysql-community-server
sudo dnf install mariab
sudo dnf install mariadb
sudo dnf info community-mysql
sudo dnf remove mariadb
sudo dnf install community-mysql
mysql
nano consulta.sql
nvim rt
gcc hola.c -o hola
nvim hola.c
flatpak install blackbox
sudo dnf instal gnome-software
sudo dnf install gnome-software
sudo dnf install gnome-terminal
sudo dnf install gnome-console
nivm
cd Descargas/examenesBBDD
/bin/ls --color -l -H
sudo dnf remove gnome-console
nvim .config/zsh/options.zsh 
nvim .config/nvim/lua/config/options.lua 
flatpak update
sudo dnf search problem
sudo dnf remove gnome-abrt-1.4.2-3.fc37.x86_64
sudo dnf remove fish
sudo dnf install PackageKit-1.2.5-2.fc37.x86_64
nvim .mysql_history
nvim init.lua
flatpak remove blackbox
flatpak remove --unused
flatpak remove --delete-data
sudo dnf remove PackageKit-1.2.5-2.fc37.x86_64
sudo dnf remove PackageKit
sudo dnf remove gnome-software-43.5-1.fc37.x86_64
sudo dnf autoremove
sudo dnf search better
cd /etc/yum.repos.d
sudo dnf remove _copr:copr.fedorainfracloud.org:dawid:better_fonts.repo
rm _copr:copr.fedorainfracloud.org:dawid:better_fonts.repo
sudo rm _copr:copr.fedorainfracloud.org:dawid:better_fonts.repo
sudo dnf copr enable calcastor/gnome-patched\
\
sudo dnf --refresh upgrade
nvim config/.zshrc
starship init
starship init zsh
builtin cd -- .zsh-evalcache/
nvim init-fnm-7cf57d24b57ecd95920e42935e0e3daa.sh
nvim .zsh-evalcache/init-starship-78a4f8740b654f88279ae4b2ea0857bc.sh
builtin cd -- .local/share/zinit/plugins/starship---starship/
\:q
ld
curl -fsSL https://fnm.vercel.app/install | bat
fnm completions --shell zsh
rm -rf .local/share/zinit/plugins/Schniz---fnm
echo $SKIPPED_COMPS
nvim .config/starship.toml  
sleep 3
sudo dnf install nim
./install.sh ~/.local/bin
mv nim nim_dir
cd nim_dir/bin/
ln -s nim ../../
rm nim
cd nim_dir
./nim
mv nim_dir nim
curl https://nim-lang.org/choosenim/init.sh -sSf | sh
which nim
rm -rf bin
rm -rf nim
nvim nvim
nimble
nim compile -r hola.nim
./hola
tl
tldr nim
nim check hola
nim check hola.nim
nvim hol
nim .config/nvim/lua/config/plugins.lua 
nvim hola
man nim
nim compile -r -d:release hola.nim
nim
nim cc hola.nim
nim cc hola.nim --nimcache .
cd .cache/nvim
cd hola_d
nvim @mhola.nim.c
rm -rf .dotnet
rm -rf .hplip/
rm -rf .pki
rm .lesshst
rm hola*
mkdir nim
cd nim
nvim hola.nim
nim c -r hola.nim
rm Proyecto_blabla*
rm -rf Proyecto_blabla*
rm preview.gif
rm Practica2.pdf
rm P0-ejs-Make
rm ola.gif
rm ex_*
rm -rf P0-ejs-Make nim-1.6.12-linux_x64
mv agg-x86_64-unknown-linux-gnu ~/.local/bin/agg
agg
choosenim
choosenim remove stable
rm -rf .choosenim .nimble
cd plugins/ogham---exa
builtin cd -- .local/share/zinit/plugins/ogham---exa/
cd completions
nvim exa.zsh
zi update ogham/exa
fnm env --use-on-cd
git restore config/plugins.zsh
git checkout dev
git pull
cd zunder-zsh
git checkout main
cp .zshenv Git/zunder-zsh/config/.zshenv
which fnm
builtin cd -- .mozilla/firefox/8aaf9ht8.default-release/storage/default/https+++nerdlegame.com/
builtin cd -- plugins/Schniz---fnm/
builtin cd -- .local/share/zinit/plugins/Schniz---fnm/
./fnm
rm -rf .local/share/zinit/
fnm
rm -rf .local/share/zinit/ .local/share/fnm
cd .config/fish
builtin cd -- .local/share/fnm/
builtin cd -- .local/bin/
stylua lua/config/*
rm -rf nvim
cp -r .config/nvim Git/dotfiles/config
cd nvim
rm lazy-lock.json
cp .config/nvim/lua/config/plugins.lua Git/dotfiles/config/nvim/lua/config/plugins.lua
builtin cd -- Git/dotfiles/config/
nvim Git/zunder-zsh/README.md 
fnm l
fnm ls
source .local/share/zinit/plugins/Schniz---fnm/init.zsh
rm -rf .local/share/fnm
fnm env --use-on-cd 
fnm env --use-on-cd > .local/share/zinit/plugins/Schniz---fnm/init.zsh
rm -rf .local/share/fnm .local/share/zinit
pnpm
pnpm list
pnpm -g list
rm -rf .zsh-evalcache
sleep 10
echo $AUTO_NOTIFY_THRESHOLD
builtin cd -- Git/Baconclock/
nvim .p10k.zsh
sleep 11
echo "Hola $HOME"
nvim install.sh
uname -a
uname --operating-system
uname -os
nvim .config/zsh/plugins.zsh 
time uname -o
uname -m
uname -o
fnm list
npm install -g pnpm
nvim config/plugins.zsh 
nvi plugins.zsh
cd .ca
rm -rf .cache
cd /tmp
fd -H
lt
sudo dnf search clipboard
sudo dnf search gnome-shell
builtin cd -- .cache/zinit/
builtin cd -- .local/share/zinit/
cd snippets
cd aliases.zsh
cd home--warbacon--.config--zsh
nvim aliases.zsh/aliases.zsh.zwc
nvim aliases.zsh/aliases.zsh
touch greeting.zsh
nvim .config/zsh/greeting.zsh 
las
lll
nvi aliases.zsh
nvim greeting.zsh
mv greeting.zsh zsh_greeting.zsh
mv zsh_greeting.zsh ola
mv ola zsh_greeting.zsh
welcome
nvim zsh_greeting.zsh
mv zsh_greeting.zsh zunder-config.zsh
cd al
nvim uninstall.sh
0
1
$1
$0
zi unload romkatv/powerlevel10k
builtin cd -- Git/zunder-zsh/
c√±s
nvim nvim aliases.zsh
[[ ! $EXA_DISABLED || -z $EXA_DISABLED ]]
[[ -z $EXA_DISABLED ]]
[[ $EXA_DISABLED ]]
! $EXA_DISABLED
[[ ! $EXA_DISABLED ]]
echo $EXA_DISABLED
$EXA_DISABLED
Q test $EXA_DISABLED
EXA_DISABLED=1
! test $EXA_DISABLED
EXA_DISABLED=fale
EXA_DISABLED=false
test $EXA_DISABLED
nvim .zsh
nvim .config/zsh/.zshrc 
sudo dnf install figlet
figlet "zunder-sh"
figlet "zunder-zsh config"
figlet -c "zunder-zsh config"
figlet -cp "zunder-zsh config"
figlet -t "zunder-zsh config"
figlet -f big "zunder-zsh config"
figlet -f digital "zunder-zsh config"
figlet -f mini "zunder-zsh config"
figlet -f shadow "zunder-zsh config"
figlet -f epix "zunder-zsh config"
figlet -f epic "zunder-zsh config"
figlet -f ivrit "zunder-zsh config"
figlet -f lean "zunder-zsh config"
figlet -f slant "zunder-zsh config"
figlet -f slant "zunder-zsh"
figlet "zunder-zsh"
figlet "User config"
edit-config() {}
edit-config {}
edit-config(){}
edit-config(){\
$EDITOR $ZDOTDIR/zunder-config.zsh\
}
edit-config
$EDITOR || nano
./Juegos/WartribeAcademy-1.7.2-pc/WartribeAcademy.sh
chmod +x ERJuego.x86_64
nvi zunder-config.zsh
gcc --version
d
\
\
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source "$HOME/.cargo/env"
cargo install stable
rustup
rustup update
rust
sudo dnf install docker
docker
sudo dnf install docker-io
builtin cd -- Documentos/Programaci√≥n\ orientada\ a\ objetos/
mkdir poo
mv Pr√ÉÅctica\ 0 poo/p0
cd poo
rm Enunciado-P0.pdf
docker run -it --rm -v "~/Documentos/Programaci√≥n orientada a objetos/Pr√ÉÅcticas/poo/p0":/home/poo diiuca/poo
sudo docker run -it --rm -v "~/Documentos/Programaci√≥n orientada a objetos/Pr√ÉÅcticas/poo/p0":/home/poo diiuca/poo
sudo docker run -it --rm -v "$HOME/Documentos/Programaci√≥n orientada a objetos/Pr√ÉÅcticas/poo/p0":/home/poo diiuca/poo
sudo docker container
sudo docker containers
sudo docker container ls
sudo docker container 
sudo docker images
sudo docker rmi diiuca/poo
sudo usermod -aG docker $USER
docker rmi diiuca/poo
reboot
docker images
docker run -it --rm -v "$HOME/Documentos/Programaci√≥n orientada a objetos/Pr√ÉÅcticas/poo/p0":/home/poo diiuca/poo
docker run -it --rm -v ~/Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/poo/:~/poo diiuca/poo
docker run -it --rm -v ~/Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/poo/:/poo diiuca/poo
sudo dnf remove docker
sudo dnf install docker-ce docker-ce-cli containerd.io\

sudo dnf remove docker \\
                  docker-client \\
                  docker-client-latest \\
                  docker-common \\
                  docker-latest \\
                  docker-latest-logrotate \\
                  docker-logrotate \\
                  docker-selinux \\
                  docker-engine-selinux \\
                  docker-engine
sudo dnf -y install dnf-plugins-core\
sudo dnf config-manager \\
    --add-repo \\
    https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
groups
builtin cd -- Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/poo/
cd p0
c++
btop
nvim hola.rs
mkdir Proyectos
cargo
cargo compile
./target/debug/Proyectos
cd P
cd Proyectos
./target/debug/rust
cargo ru
rm -rf *
rm -rf rust
mkdir rust
cd rust
cargo init
cd src
cargo install clap
cargo add clap
nvim main.rs
cargo run
cargo install
cargo add clap --features derive
./target/debug/rust --help
./target/debug/rust --n Polla -c 3
cargo build
./target/debug/rust -n Polla -c 3
./target/debug/rust -n Polla -l man -c 3
cargo run ola
nvim src/main.rs
cargo run ola pep
rm -rf Proyectos
cargo list
cargo ls
cargo 
rustup completions --shell zsh
rustup completions zsh
zi creinstall rust
zi creinstall -q rust
zi creinstall zdharma-continuum/null
cargo completions
cd .cargo/bin
cd registry
cd .rustup
cd toolchains/stable-x86_64-unknown-linux-gnu
cd share
cd site-functions
nvim .config/zsh/user-config.zsh 
nvi us
fd -H _rustup
rm -rf .local/share/zinit/plugins/zdharma-continuum---null
echo $ZINIT[HOME_DIR]/
echo $ZINIT[COMPLETION]/
echo $ZINIT[COMPLETIONS]/
echo $ZINIT[COMPLETIONS]
echo $ZINIT[COMPLETIONS_DIR]
nvim .zshenv
rustup completions
rm -rf .local/share/zinit/completions/_rustup
nvim .config/zsh/zunder-config.zsh 
nvim hola.h
nvim adsa
nvim asdsadad.cpp
code .
sudoedit /etc/dnf/dnf.conf
sudo dnf --refresh upgrade
builtin cd -- .local/share/applications/
cd Git
git clone https://github.com/rafaelmardojai/firefox-gnome-theme && cd firefox-gnome-theme
./scripts/auto-install.sh
zi unload hlissner/zsh-autopair
man basename
cat .bash_history > hola.txt
rm hola.txt
builtin cd -- Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/poo/p0/
sudo systemctl start docker
docker container ls
nvim Make
nvim Makefile
make
make install
make all
rm programita
rm Tests-auto.tar.gz Make_check.mk Makefile test-fechacadena-consola.cpp fecha_cadena_check.cpp
rm main.o
nvim fecha
make clean
gdb
mv p0 P0
nvim Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/poo/P0/fecha.hpp 
builtin cd -- Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/poo/P0/
docker run -it --rm -v ~/Documentos/Programaci√≥n\ orientada\ a\ objetos/Pr√ÉÅcticas/poo/:/home/poo diiuca/poo
nvim fecha.hpp
nvim fecha.cpp
mkdir "Pr√ÉÅctica 3"
cd Pr√ÉÅctica\  
builtin cd -- Documentos/Archivo/An√ÉÅlisis\ de\ Algoritmos\ y\ Estructuras\ de\ Datos/
cd ejercicio1
cd pr√ÉÅctica\ 1
cd Ejercicio\  
cd Ejercicio\ 1
cd Ejercicio\ 2
cd Ejercicio\ 3
cd Ejercicio\ 4
cd pr√ÉÅctica\ 2
cd ejercicio3
builtin cd -- Documentos/Estructuras\ de\ datos\ no\ lineales/
cd Pr√ÉÅcticas/Pr√ÉÅctica\ 3
nvim lista_enla.h
mv lista_enla.h listaenla.h
nvim listaenla.h
nvim agen_lis.h
mv agen_lis.h agenlis.h
g++ main.cpp -o main && ./main
nvim agen_E-S.h
nvim Pr√ÉÅctica\ 2/ejercicio1.cpp
cd Pr√ÉÅctica\ 3
sudo dnf install helix
builtin cd -- .config/nvim/
cd lua/config
sudo dnf install clang
sudo dnf copr enable varlad/helix\
sudo dnf install helix\

hc
cd .config/helix
hx config.toml
nvim main.cpp
c
hx main.cpp
builtin cd -- .cache/helix/
cd helix
hx .
rm mamar.pdf
cp Enunciado\ de\ la\ pr√ÉÅctica\ 2.pdf ejercicio2/mamar.pdf
eog mamar.pdf
evince mamar.pdf
hx -checkhealth
hx --checkhealth
sudo dnf install clangs
sudo dnf install clangd
sudo dnf install clang-tools-extra
hx
sudo dnf install pip
hx hola.cpp
pip install ruff-lsp
hx --health
hx 
ruff-lsp
builtin cd -- .config/helix/
nvim language.toml
hx la
hx language.toml
builtin cd -- Documentos/Sistemas\ distribuidos/Pr√ÉÅctica1/
nvim se
rm ~/.local/share/fnm
rm -rf ~/.local/share/fnm
fnm install --lts
fnm env --use-on-cd > ~/.local/share/zinit/plugins/Schniz---fnm/init.zsh
builtin cd -- Documentos/Sistemas\ distribuidos/
cd Pr√ÉÅctica2
s
hx cliente.py
cd .local/
cd bin
rm ruff ruff-lsp 
rm -rf lib
cd s
cd state
builtin cd -- .cache/nvim/
cd .config/nvim/lua/config
nvim plugins.lua
builtin cd -- Documentos/Sistemas\ distribuidos/Pr√ÉÅctica2/
nvim cl
cd ejercicio2
nvim .config/nvim/lua/config/plugins.lua 
nvim hola.cpp
nvim servidor.py
nvim cliente.py
fuser 1024
fuser 1234
python cliente.py --help
evince hola.pdf
rm hola.pdf
touch hola.txt
nvim pene.txt
nvim hola.txt
evince pene.pdf
fuser -n tcp 1234
python servidor.py
python cliente.py
mysql -h giibd.uca.es -u u77173482 -p BD_tiendas
nvim consulta.sql
mkdir "Documentos/Bases de datos/Pr√ÉÅcticas"
mv consulta.sql Documentos/Bases\ de\ datos/Pr√ÉÅcticas/ejercicios1.sql
hx ejercicios2.sql
builtin cd -- Documentos/Bases\ de\ datos/Pr√ÉÅcticas/
nvim ejercicios2.sql
rm firefox-gnome-theme-110 drive-download-20230314T083142Z-001 Cuaderno\ del\ profesor
rm -rf  firefox-gnome-theme-110 drive-download-20230314T083142Z-001 Cuaderno\ del\ profesor
rm firefox-gnome-theme-110.zip
rm drive-download-20230314T083142Z-001.zip 
builtin cd -- Git/MP/
cd cmake-build-debug
./ESI_SHARE
cd M√∫sica
cd Documentos
sudo dnf install transmission
_neofetch
ffetch
cd zhsr
sudo dnf upgrade
rm -rf Git/dotfiles/config/fish
cp -r .config/fish Git/dotfiles/config
builtin cd -- Git/dotfiles/
cd fish
rm -rf .config/fish
zi update
rm .local/share/zinit/completions/_cargo
cd Git/dotfiles
cd dw
cdls
cd zsh
[[ "$a" || "$b" ]] && echo yes
rm -rf .zephyr
cd D
rm -rf .local/share/zinit
cd .config/nfig/zsh
autosuggest-disable
echo $AUTOPAIRS_DISABLED
nvim zunder-config.zsh
nvim zunder-config.zsh n
nvim pl
which ls
exa --icons
-w 0
nvim
fd | wc -l
bindkey '^ ' autosuggest-accept
bindkey '^ ' autosuggest-execute
sudo dnf install fish
zmodload zprof
zmodload zsh/zprof
zprf
zprof

autopair-delete
ba
bar
bat
cat
nvim 
nvim Descargas
backward-word
cdq
cd -
_zsh_autosuggest_bind_widget
nvim hola.md
echo $precmd_functions
echo $HOST 
echo $HOSTNAME
echo $HOST
bas
bash
hostname
echo 
echo $LS_COLORs
LS_COLORS=''
export LS_COLORS
zsh -c fd
echo $LS_COLORS
fd
cd .config/nvim
l
unalias ls
ll
nvim .config/zsh
history
nvim .zsh_history
zsh
fish
cd assets
eval $(fnm env --use-on-cd)
eval "$(fnm env --use-on-cd)"
rm -rf .config/zsh/.zsh-evalcache
cp .config/starship.toml .config/zsh
cd config
nvim starship.toml
cp .config/zsh/plugins.zsh Git/zunder-zsh/config
cd Git/zunder-zsh
./install.sh
nvim README.md
lg
cd Escritorio
zunder load
zunder asdad
zunder asd
source zunder.zsh
nvim zunder-zsh/
time zunder load Warbacon/zunder-zsh
hyperfine "zunder load Warbacon/zunder-zsh"
zunder load Warbacon/zunder-zsh
ls zsh-syntax-highlighting
ls zsh-syntax-highlighting | grep *plugin.zsh
ls zsh-syntax-highlighting | grep +plugin.zsh
ls zsh-syntax-highlighting | grep plugin.zsh
ls zsh-syntax-highlighting | grep ^plugin.zsh
zunder load zsh-users/zsh-syntax-highlighting
rm -rf zsh-syntax-highlighting
nvim zhsr
source $ZDOTDIR/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh
cd de
compinit
nvim zunder-zsh
sl
nvim autopair.plugin.zsh
nvim zsh-autopair.plugin.zsh
lls
nvim zunder.zsh
cd zsh-syntax-highlighting
nvim zsh-syntax-highlighting.zsh
nvim zsh-syntax-highlighting.plugin.zsh
cd zsh-autopair
nvim autopair.zsh
rm -rf zsh-autopair zsh-syntax-highlighting
rm -rf zunder-zsh
rm zunder.zsh
nvim Plantillas
zi compiled
zi completions
cd .config/zsh
nvim init.zsh.zwc
builtin cd -- plugins/starship---starship/
nvim init.zsh
zi compile
hyperfine "fish -i -c exit"
la
cd .local/share/zinit
nvim key-bindings.zsh
nvim aliases.zsh
nvim plugins.zsh
nvim user-config.zsh
builtin cd -- .config/zsh/
nvim options.zsh
cd 
cd
lla
nvim .zshrc
rm .zshrc
hyperfine "zsh -i -c exit"
cd .config
cd Descargas
..
cd Documentos/Archivo
cd An√ÉÅlisis\ de\ Algoritmos\ y\ Estructuras\ de\ Datos
cd Pr√ÉÅcticas
ls
nvim pr
nvim prueba.cpp
: 1679423098:0;echo # sdadsdsadsd
: 1679423104:0;# sdadsdsadsd
: 1679423108:0;#sdadsdsadsd
: 1679423117:0;fish
: 1679471680:0;ls
: 1679471687:0;nvim key-bindings.zsh
: 1679471690:0;nvim plugins.zsh
: 1679471698:0;nvim user-config.zsh
: 1679471704:0;cd
: 1679471707:0;builtin cd -- .config/zsh/
: 1679471707:0;ls
: 1679471708:0;cd
: 1679471709:0;builtin cd -- Git/zunder-zsh/
: 1679471710:0;ls
: 1679471716:0;nvim README.md
: 1679471722:0;cd
: 1679471726:0;builtin cd -- .config/zsh/
: 1679471738:0;cp * ~/Git/zunder-zsh
: 1679471742:0;cp -r * ~/Git/zunder-zsh
